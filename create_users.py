import sqlite3
import random

# データベースに接続
conn = sqlite3.connect('履修登録.sqlite')
cursor = conn.cursor()

# 教員テーブルを作成
cursor.execute('''
CREATE TABLE IF NOT EXISTS 教員 (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    名前 VARCHAR NOT NULL,
    カナ VARCHAR NOT NULL,
    学科ID INTEGER REFERENCES 学科(ID)
);
''')

# 学生テーブルを作成
cursor.execute('''
CREATE TABLE IF NOT EXISTS 学生 (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    名前 VARCHAR NOT NULL,
    カナ VARCHAR NOT NULL,
    学科ID INTEGER REFERENCES 学科(ID)
);
''')

# 苗字リスト
苗字 = [
    '佐藤', '鈴木', '高橋', '田中', '渡辺', '伊藤', '山本', '中村', '小林', '加藤',
    '吉田', '山田', '松本', '斎藤', '清水', '森', '石井', '金子', '木村', '林',
    '井上', '池田', '前田', '藤田', '後藤', '村上', '岡田', '長谷川', '山口', '三浦',
    '島田', '竹内', '大野', '安田', '川崎', '萩原', '高木', '青木', '西村', '小川',
    '中島', '大塚', '加賀', '新井', '鈴村', '東', '神田', '岡本', '橋本', '福田'
]

# 苗字カナリスト
苗字カナ = [
    'サトウ', 'スズキ', 'タカハシ', 'タナカ', 'ワタナベ', 'イトウ', 'ヤマモト', 'ナカムラ', 'コバヤシ', 'カトウ',
    'ヨシダ', 'ヤマダ', 'マツモト', 'サイトウ', 'シミズ', 'モリ', 'イシイ', 'カネコ', 'キムラ', 'ハヤシ',
    'イノウエ', 'イケダ', 'マエダ', 'フジタ', 'ゴトウ', 'ムラカミ', 'オカダ', 'ハセガワ', 'ヤマグチ', 'ミウラ',
    'シマダ', 'タケウチ', 'オオノ', 'ヤスダ', 'カワサキ', 'ハギワラ', 'タカギ', 'アオキ', 'ニシムラ', 'オガワ',
    'ナカジマ', 'オオツカ', 'カガ', 'アライ', 'スズムラ', 'アズマ', 'カンダ', 'オカモト', 'ハシモト', 'フクダ'
]


# 名前リスト
名前 = [
    '太郎', '花子', '一郎', '美咲', '翔太', '優子', '浩一', '香織', '剛', '恵子',
    '健一', '智子', '真一', '千尋', '明日香', '愛', '祐介', '杏子', '勇気', '愛子',
    '雄大', '由美', '純一', '信也', '直樹', '和美', '千夏', '良太', '麻衣', '智也',
    '幸子', '紗耶', '貴子', '理恵', '明美', '悟', '梨花', '拓也', '未央', '春菜',
    '千秋', '舞', '雅人', '悠斗', '恵', '莉子', '翔', '桜子', '駿', '瑞希'
]

# 名前カナリスト
名前カナ = [
    'タロウ', 'ハナコ', 'イチロウ', 'ミサキ', 'ショウタ', 'ユウコ', 'コウイチ', 'カオリ', 'ツヨシ', 'ケイコ',
    'ケンイチ', 'トモコ', 'シンイチ', 'チヒロ', 'アスカ', 'アイ', 'ユウスケ', 'キョウコ', 'ユウキ', 'アイコ',
    'ユウダイ', 'ユミ', 'ジュンイチ', 'シンヤ', 'ナオキ', 'カズミ', 'チナツ', 'リョウタ', 'マイ', 'トモヤ',
    'サチコ', 'サヤ', 'タカコ', 'リエ', 'アケミ', 'サトル', 'リカ', 'タクヤ', 'ミオ', 'ハルナ',
    'チアキ', 'マイ', 'マサト', 'ユウト', 'メグミ', 'リコ', 'ショウ', 'サクラコ', 'シュン', 'ミズキ'
]

# 学科IDを取得
cursor.execute("SELECT id FROM 学科")
# すべての学科レコードを取得 fetchall()
# 個々の学科はタプル(ID, 名前)
# 学科全体はリストとして返される
# 学科のID(タプルの0番目)をリストとして取得
学科IDs = [row[0] for row in cursor.fetchall()]

# 教員データの登録
for i in range(50):
    # 苗字と名前についてランダムなインデックスを選択
    苗字インデックス = random.randint(0, len(苗字) - 1)
    名前インデックス = random.randint(0, len(名前) - 1)

    # インデックスを使って苗字と名前を取得
    # 苗字と名前を結合して人名と人名カナを作成
    人名 = 苗字[苗字インデックス] + " " + 名前[名前インデックス]
    人名カナ = 苗字カナ[苗字インデックス] + " " + 名前カナ[名前インデックス]

    # 学科IDをランダムに選択
    学科ID = random.choice(学科IDs)

    # 教員データをデータベースに挿入
    cursor.execute("INSERT INTO 教員 (名前, カナ, 学科ID) VALUES (?, ?, ?)", (人名, 人名カナ, 学科ID))

# 学生データの作成
学生リスト = []
for i in range(800):
    # 苗字と名前についてランダムなインデックスを選択
    苗字インデックス = random.randint(0, len(苗字) - 1)
    名前インデックス = random.randint(0, len(名前) - 1)

    # インデックスを使って苗字と名前を取得
    # 苗字と名前を結合して人名と人名カナを作成
    人名 = 苗字[苗字インデックス] + " " + 名前[名前インデックス]
    人名カナ = 苗字カナ[苗字インデックス] + " " + 名前カナ[名前インデックス]

    # 学科IDをランダムに選択
    学科ID = random.choice(学科IDs)

    # 1人のデータを作り、学生に追加
    学生リスト.append({
        '名前': 人名,
        'カナ': 人名カナ,
        '学科ID': 学科ID
    })

# 学生データをソート
学生リスト.sort(key=lambda x: x['カナ'])

# 学生データをデータベースに挿入
for student in 学生リスト:
    cursor.execute("INSERT INTO 学生 (名前, カナ, 学科ID) VALUES (?, ?, ?)", (student['名前'], student['カナ'], student['学科ID']))

conn.commit()

print("データ登録完了")
conn.close()
